package com.compant.java1;

public class LL2 {
      private Node head;

    class  Node{
         int data;
         Node next;
        Node(int data){
            this.data=data;
            this.next=null;
        }

    }
    public void addfirst(int data){
        Node newnode = new Node(data);
        if (head==null){
            head=newnode;
        }else {
            newnode.next = head;
            head = newnode;
        }
    }
    public void addlast(int data){
        Node newNode = new Node(data);
        if (head==null){
            head=newNode;
            return;
        }
         Node currentnode = head;
            while (currentnode.next!=null){
                currentnode=currentnode.next;
            }
            currentnode.next=newNode;
    }
    public  void deletefirst(){
        Node currentNode = head;
        if (head==null){
            System.out.println("List is Empty");
        }else {
            head=currentNode.next;

        }
    }
    public void  deletelast(){
        if (head==null){
            System.out.println("List is Empty");
            return;
        }
        Node secondlast =head;
        Node lastNode =head.next;
        while (lastNode.next!=null){
            lastNode =lastNode.next;
            secondlast=secondlast.next;
        }
        secondlast.next=null;

    }
    public  void  search(int searchdata){
        Node currNode = head;
        boolean found = false;
        if (head==null){
            System.out.println("List is Empty");
            return;
        }
        while (currNode.next!=null){
            if (currNode.data==searchdata){
                found=true;
            }
            currNode=currNode.next;
        }
        if (found==true){
            System.out.println("Number present in list");
        }else {
            System.out.println("Not Present in the list");
        }
    }
    public void printdata(){
        int cout=0;
        Node currentnode =head;
        if (head==null){
            System.out.println("List is Empty");
        }
        while (currentnode!=null) {
            System.out.print("\t"+currentnode.data);
            currentnode=currentnode.next;
            cout++;

        }
        System.out.println("\nList has "+cout+" Elements");
    }

    public static void main(StringOperation[] args) {
        LL2 list = new LL2();
//        list.addfirst(10);
//        list.addfirst(12);
//        list.addfirst(15);
//        list.addlast(10);
//        list.addlast(12);
//        list.addlast(15);
//        list.addlast(20);
//        list.deletefirst();
//        list.deletelast();
        list.search(13);
        list.printdata();

    }
}
