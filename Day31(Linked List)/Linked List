package com.compant.java1;

public class LL {
    public Node head;
    private  int size;
    LL(){
        this.size=0;
    }
    class Node{
        int data;
        Node next;
        Node(int data){
            this.data=data;
            this.next = null;
            size++;
        }
    }
    public void  insertfirst(int data){
        Node newnode = new Node(data);
        if (head==null){
            head=newnode;
        }else {
            newnode.next=head;
            head=newnode;
        }
    }
    public void insertlast(int data){
       Node newNode =new Node(data);
       if (head==null){
           head=newNode;
           return;
       }
       Node currNode = head;
       while (currNode.next!=null){
           currNode=currNode.next;
       }
       currNode.next=newNode;
    }
    public void print(){
        Node curr = head;
        if (head==null){
            System.out.println("List is Empty");
        }
            while (curr!=null){
                System.out.print("\t"+curr.data);
                curr=curr.next;
            }
        }


        public void deleteFirst(){
           if (head==null){
               System.out.println("List is empty");
               return;
           }
           size--;
           head=head.next;
        }

        public  void deleteLast(){
        if (head==null){
            System.out.println("List is empty");
            return;
        }
        size--;
           if (head.next==null){
               head=null;
               return;
           }
           Node secondlast = head;
           Node LastNode = head.next;
           while (LastNode.next!=null){
               LastNode=LastNode.next;
               secondlast=secondlast.next;
           }
           secondlast.next=null;
        }

        public int getsize(){
        return size;
        }



    public static void main(StringOperation[] args) {
      LL list = new LL();
        System.out.println("Insert at Last");
      list.insertlast(10);
      list.insertlast(12);
      list.insertlast(15);
      list.print();

      System.out.println("\nInsert at First");
        list.insertfirst(10);
        list.insertfirst(12);
        list.insertfirst(15);
        list.print();
        list.deleteFirst();
        System.out.println("\nafter deletion");
        list.print();
        list.deleteLast();
        System.out.println("\nafter deletion");
        list.print();
        System.out.println("\n"+list.getsize());

    }
}
